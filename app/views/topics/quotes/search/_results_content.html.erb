<% if results.any? %>
  <div class="mt-8 flow-root">
    <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
      <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
          <div class="divide-y divide-gray-200 bg-white">
            <% results.each do |quote| %>
              <div class="p-4 sm:px-6">
                <div class="flex items-center justify-between">
                  <div class="flex-1">
                    <p class="text-sm font-medium text-gray-900"><%= quote[:content] %></p>
                    <div class="mt-1 flex items-center gap-x-4 text-xs text-gray-500">
                      <% if quote[:section].present? %>
                        <span>Section: <%= quote[:section] %></span>
                      <% end %>
                      <% if quote[:source_url].present? %>
                        <%= link_to "Source", quote[:source_url], 
                            class: "text-blue-600 hover:text-blue-900",
                            target: "_blank" %>
                      <% end %>
                    </div>
                  </div>
                  <%= form_with url: send("#{topic.class.name.underscore}_quotes_path", topic), 
                              class: "ml-4 flex-shrink-0",
                              data: { turbo_frame: "_top" } do |f| %>
                    <%= f.hidden_field 'quote[content]', value: quote[:content] %>
                    <%= f.hidden_field 'quote[original_text]', value: quote[:content] %>
                    <%= f.hidden_field 'quote[source_url]', value: quote[:source_url] %>
                    
                    <%# Handle attribution text - try to extract character/speaker if present %>
                    <% speaker, text = quote[:content].match(/^([^:]+):(.+)/)&.captures %>
                    <%= f.hidden_field 'quote[attribution_text]', value: speaker || quote[:author] %>
                    
                    <%# Section handling %>
                    <%= f.hidden_field 'quote[section_title]', value: quote[:section] %>
                    <%= f.hidden_field 'quote[wikiquote_section_id]', value: quote[:section]&.parameterize %>
                    
                    <%# Quote metadata %>
                    <%= f.hidden_field 'quote[disputed]', value: quote[:section]&.downcase == 'disputed' %>
                    <%= f.hidden_field 'quote[misattributed]', value: quote[:section]&.downcase == 'misattributed' %>
                    
                    <%# Build citation with all available context %>
                    <% citation_parts = [
                      speaker,
                      quote[:author],
                      quote[:section],
                      quote[:context]
                    ].compact.uniq %>
                    <%= f.hidden_field 'quote[citation]', value: citation_parts.join(' - ') if citation_parts.any? %>
                    
                    <%# Store context %>
                    <%= f.hidden_field 'quote[context]', value: [quote[:section], quote[:context]].compact.join(' - ') %>
                    
                    <%# Language %>
                    <%= f.hidden_field 'quote[original_language]', value: 'en' %>
                    
                    <%# Store all raw data in metadata %>
                    <%= f.hidden_field 'quote[metadata]', value: {
                      wikiquote: {
                        raw_content: quote[:content],
                        raw_html: quote[:original_text],
                        section: quote[:section],
                        author: quote[:author],
                        source_url: quote[:source_url],
                        context: quote[:context],
                        speaker: speaker,
                        extracted_at: Time.current.iso8601,
                        page_title: quote[:page_title],
                        search_params: {
                          query: quote[:search_query],
                          author: quote[:search_author],
                          section: quote[:search_section]
                        }
                      }
                    }.deep_stringify_keys.to_json, 
                       data: { type: 'json' } %>
                    
                    <%= f.submit "Add Quote", 
                        class: "rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500" %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-6">
      <%== pagy_nav(pagy) %>
    </div>
  </div>
<% end %> 