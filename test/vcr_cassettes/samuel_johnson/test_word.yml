---
http_interactions:
- request:
    method: post
    uri: https://api.zyte.com/v1/extract
    body:
      encoding: UTF-8
      string: '{"url":"https://johnsonsdictionaryonline.com/views/search.php?term=testword\u0026searchType=Headword\u0026edition=both\u0026submit=Search","browserHtml":true,"javascript":true}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.zyte.com
      Authorization:
      - Basic OWU3NTRiYjYxZTY4NGFhZDg4YTk4ZWNlYWRhMzYzYmE6
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 06 Jan 2025 22:12:23 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      Request-Id:
      - c68d857003b4e71b3cbf32a150a954cf
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Expose-Headers:
      - "*, X-Project-Key"
      Access-Control-Allow-Methods:
      - GET, PUT, POST, DELETE, PATCH, OPTIONS
      Access-Control-Allow-Headers:
      - DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control,
        Content-Type, Range, Authorization, X-Project-Key
      Access-Control-Max-Age:
      - '1728000'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 06 Jan 2025 22:12:23 GMT
recorded_with: VCR 6.3.1
